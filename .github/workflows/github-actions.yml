name: CI

on:
  push:
    branches: ["*"]
  pull_request:
    branches: [main, master]

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20

  #     - name: Cache node_modules
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           node_modules
  #           ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     - name: Install dependencies
  #       run: npm ci --ignore-scripts

  #     - name: Run ESLint
  #       run: npm run lint

  # test:
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20

  #     - name: Cache node_modules
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           node_modules
  #           ~/.npm
  #         key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-node-

  #     - name: Install dependencies
  #       run: npm ci --ignore-scripts

  #     - name: Run tests
  #       run: npm test

  build:
    runs-on: ubuntu-latest
    # needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Fetch Neon branch database URL
        id: neon-db-url
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
        run: |
          RAW_BRANCH_NAME="${GITHUB_HEAD_REF:-${GITHUB_REF_NAME}}"
          if [ "$RAW_BRANCH_NAME" = "main" ]; then
            BRANCH_NAME="main"
          else
            BRANCH_NAME="preview/$RAW_BRANCH_NAME"
          fi
          echo Using branch: "${BRANCH_NAME}"
          PROJECT_ID="${{ secrets.NEON_PROJECT_ID }}"
          BRANCH_INFO=$(curl -s -H "Authorization: Bearer $NEON_API_KEY" \
            "https://console.neon.tech/api/v2/projects/$PROJECT_ID/branches?search=$BRANCH_NAME")
          BRANCH_ID=$(echo "$BRANCH_INFO" | jq -r '.branches[0].id')
          if [ "$BRANCH_ID" = "null" ] || [ -z "$BRANCH_ID" ]; then
            echo "Branch $BRANCH_NAME not found in Neon project $PROJECT_ID"
            exit 1
          fi
          CONNECTION_INFO=$(curl -s -H "Authorization: Bearer $NEON_API_KEY" \
            "https://console.neon.tech/api/v2/projects/$PROJECT_ID/connection_uri?database_name=neondb&role_name=neondb_owner&branch_id=$BRANCH_ID")
          DATABASE_URL=$(echo "$CONNECTION_INFO" | jq -r '.uri')
          if [ -z "$DATABASE_URL" ] || [ "$DATABASE_URL" = "null" ]; then
            echo "DATABASE_URL not found for branch $BRANCH_NAME"
            exit 1
          fi
          echo "DATABASE_URL=$DATABASE_URL" >> $GITHUB_ENV

      # - name: Install dependencies
      #   run: npm ci

      # - name: Check Next.js build
      #   run: npm run build
